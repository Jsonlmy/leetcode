'''
假设有打乱顺序的一群人站成一个队列。 每个人由一个整数对(h, k)表示，其中h是这个人的身高，k是排在这个人前面且身高大于或等于h的人数。 编写一个算法来重建这个队列。

注意：
总人数少于1100人。

示例

输入:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

输出:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]

链接：https://leetcode-cn.com/problems/queue-reconstruction-by-height
'''
class Solution:
    def reconstructQueue(self, people: list) -> list:
        '''
        解法1：先排序，后插入。以h倒序，k正序排序。
        [[7,0], [7,1], [6,1], [5,0], [5,2], [4,4]]。然后逐个遍历，以k的位置插入：
        [[7,0]]
        [[7,0], [7,1]]
        [[7,0], [6,1], [7,1]]
        [[5,0], [7,0], [6,1], [7,1]]
        [[5,0], [7,0], [5,2], [6,1], [7,1]]
        [[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]
        '''
        people.sort(key=lambda x: (-x[0], x[1]))
        res = []
        for p in people: res.insert(p[1], p)
        return res


if __name__ == "__main__":
    print(Solution().reconstructQueue([[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]))